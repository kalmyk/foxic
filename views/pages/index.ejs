<!DOCTYPE html>
<html>

<head>
</head>

<body>

<h2>Data Stream Aggregation Table</h2>

 What if to define table structure with aggregation functions along?
 The table scheme could easy listen to the event stream and do changes 
 accordingly in the related tables. The changes could be transformed and
 propagated as same events to the aggregation tables
 where it could be mixed with another sources. In general the idea looks like
 materialized view that is based on event stream.

<pre>
    customer {
        "type": "object",
        "properties": {
            "date": { "type": "string" },
            "customer": { "type": "string" },
            "amount": { "type": "string" }
        },
        "primary_key":["date", "customer"],
        "propagate":{
            "detail":[{
                "key":["customer"],
                "fields":{"total":"amount"}
            }]
        }
    }

    detail {
        "type": "aggregate",
        "properties": {
            "customer": { "type": "string" },
            "total": { "type": "string" }
        },
        "primary_key":["customer"],
        "sum":["amount"]
    }
</pre>

<!-- Place this tag where you want the button to render. -->
<a class="github-button"
  href="https://github.com/kalmyk/fox-wamp"
  title="Visit github"
>Visit fox-wamp on github</a>

<!-- Place this tag in your head or just before your close body tag. -->
<script async defer src="https://buttons.github.io/buttons.js"></script>

</body>

</html>
